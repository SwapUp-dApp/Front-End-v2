import{aa as t,bI as r,bJ as s}from"./index-BYFQGY9d.js";import{d as m}from"./decimals-v77BnQ4R.js";const o="0x06fdde03",d=[],i=[{type:"string"}];async function y(c){return t({contract:c.contract,method:[o,d,i],params:[]})}async function u(c){return r(()=>y(c),{cacheKey:`${c.contract.chain.id}:${c.contract.address}:name`,cacheTime:Number.POSITIVE_INFINITY})}const T="0x95d89b41",h=[],N=[{type:"string"}];async function I(c){return t({contract:c.contract,method:[T,h,N],params:[]})}async function l(c){return r(()=>I(c),{cacheKey:`${c.contract.chain.id}:${c.contract.address}:symbol`,cacheTime:Number.POSITIVE_INFINITY})}async function f(c){if(s(c.contract.address))return{name:"Ether",symbol:"ETH",decimals:18,...c.contract.chain.nativeCurrency};try{const[a,e,n]=await Promise.all([u(c).catch(()=>""),l(c),m(c)]);return{name:a,symbol:e,decimals:n}}catch{throw new Error("Invalid currency token")}}export{f as getCurrencyMetadata};
